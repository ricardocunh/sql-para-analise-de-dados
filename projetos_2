-- (query 1) Gênero dos leads
-- Coluna: gênero, leads(#)
SELECT
    CASE
        WHEN ibge.gender = 'male' then 'homens'
        WHEN ibge.gender = 'female' then 'mulheres'
        END AS "gênero",
    COUNT(*) AS "leads (#)"
    
FROM sales.customers as cus
LEFT JOIN temp_tables.ibge_genders as ibge
    ON LOWER(cus.first_name) = LOWER(ibge.first_name)
GROUP BY ibge.gender    



-- (query 2) Status profissional dos leads
-- Colunas: Status profissional, leads (%)
SELECT DISTINCT professional_status
FROM sales.customers

SELECT
    CASE
        WHEN professional_status = 'freelancer' then 'freelancer'
        WHEN professional_status = 'retired' then 'aposentado'
        WHEN professional_status = 'clt' then 'clt'
        WHEN professional_status = 'self_employed' then 'autônomo(a)'
        WHEN professional_status = 'other' then 'outro'
        WHEN professional_status = 'businessman' then 'empresário(a)'
        WHEN professional_status = 'civil_servant' then 'funcionário(a) público(a)'
        WHEN professional_status = 'student' then 'estudante'
        end as "status profissional",
    (count(*):: float)/(SELECT COUNT(*) FROM sales.customers) as "leads (%)"
FROM sales.customers
GROUP BY professional_status
ORDER BY "leads (%)"



-- (query 3) Faixa etária dos leads
-- Colunas: faixa etária, leads (%)
SELECT
    CASE
        WHEN datediff('years', birth_date, current_date) < 20 then '0-20'
        WHEN datediff('years', birth_date, current_date) < 40 then '20-40'
        WHEN datediff('years', birth_date, current_date) < 60 then '40-60'
        WHEN datediff('years', birth_date, current_date) < 80 then '60-80'
        else '80+' end "faixa etária",
        COUNT(*)::float/(SELECT COUNT(*) FROM sales.customers) as "leads (%)"
FROM sales.customers
GROUP BY "faixa etária"
ORDER BY "faixa etária" desc



-- (query 4) Faixa salarial dos Leads
-- Colunas: faixa salarial, leads(%)
SELECT
    CASE
        WHEN income < 5000 then '0-5000'
        WHEN income < 10000 then '5000-10000'
        WHEN income < 15000 then '10000-15000'
        WHEN income < 20000 then '15000-20000'
        else '20000+' end "faixa salarial",
        COUNT(*)::float/(SELECT COUNT(*) FROM sales.customers) as "leads (%)",
    CASE
        WHEN income < 5000 then 1
        WHEN income < 10000 then 2
        WHEN income < 15000 then 3
        WHEN income < 20000 then 4
        else 5 end "ordem"
FROM sales.customers
GROUP BY "faixa salarial", "ordem"
ORDER BY "ordem" desc


-- (query 5) Classificação dos veículos visitados
-- Colunas: classificação do veículo, veículos visitados (#)
-- Regra de negócio: veículos novos tem até 2 anos e seminovos acima de 2 anos
WITH
    classificacao_veiculos as(
        SELECT
            fun.visit_page_date,
            pro.model_year,
            extract('year' from visit_page_date) - pro.model_year::int as idade_veiculo,
            case
                when (extract('year' from visit_page_date) - pro.model_year::int)<=2 then 'novo'
                else 'seminovo'
                end as "classificação do veículo"
        FROM sales.funnel as fun
        LEFT JOIN sales.products as pro
            on fun.product_id = pro.product_id
    )
SELECT
    "classificação do veículo",
    count(*) as "veiculos visitados (#)"
FROM classificacao_veiculos
GROUP BY "classificação do veículo"




-- (query 6) idade dos veiculos visitados
-- Colunas: Idade do veículo, veículos visitados (%), ordem
WITH
    faixa_de_idade_dos_veiculos as(
        SELECT
            fun.visit_page_date,
            pro.model_year,
            extract('year' from visit_page_date) - pro.model_year::int as idade_veiculo,
            case
                when (extract('year' from visit_page_date) - pro.model_year::int)<=2 then 'até 02 anos'
                when (extract('year' from visit_page_date) - pro.model_year::int)<=4 then 'de 02 anos até 04 anos'
                when (extract('year' from visit_page_date) - pro.model_year::int)<=6 then 'de 04 anos até 06 anos'
                when (extract('year' from visit_page_date) - pro.model_year::int)<=8 then 'de 06 anos até 08 anos'
                when (extract('year' from visit_page_date) - pro.model_year::int)<=10 then 'de 08 anos até 10 anos'
                else 'acima de 10 anos'
                end as "idade do veículo",
             case
                when (extract('year' from visit_page_date) - pro.model_year::int)<=2 then 1
                when (extract('year' from visit_page_date) - pro.model_year::int)<=4 then 2
                when (extract('year' from visit_page_date) - pro.model_year::int)<=6 then 3
                when (extract('year' from visit_page_date) - pro.model_year::int)<=8 then 4
                when (extract('year' from visit_page_date) - pro.model_year::int)<=10 then 5
                else 6
                end as "ordem"
        
        FROM sales.funnel as fun
        LEFT JOIN sales.products as pro
            on fun.product_id = pro.product_id
    )
SELECT
    "idade do veículo",
    count(*)::float/(select count(*) from sales.funnel) as "veiculos visitados (%)", ordem
FROM faixa_de_idade_dos_veiculos
GROUP BY "idade do veículo", ordem
ORDER BY ordem
    
    


-- (query 7) Veículos mais visitados por marca
-- Colunas: brand, model, visitas(#)
SELECT
    pro.brand,
    pro.model,
    count(*) as "visitas (#)"
FROM sales.funnel as fun
LEFT JOIN sales.products as pro
    on fun.product_id = pro.product_id
GROUP BY pro.brand, pro.model
ORDER BY pro.brand, pro.model, "visitas (#)"
